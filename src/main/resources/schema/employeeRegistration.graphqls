
type UserCredentialsDB {
    userCredentialId: ID!
    username: String!
    password: String!
    employeeInfo: EmployeeInfoDB
}


type EmployeeInfoDB {
    userDetailsId: ID!
    fullName: String!
    gender: Gender
    doctorCode: String!
    dob: LocalDate
    updationTimeStamp: LocalDateTime
    creationTimeStamp: LocalDateTime
    userSignature: String
    userImage: String
    isActive: Boolean
    provider: Provider
    prefixMasterDB: PrefixMasterDB
    userCredentialsDB: UserCredentialsDB
    organizationDBSet: [OrganizationDB]
    communicationInfoDB: [CommunicationInfoDB]
    roles: [RolesDB]
    departmentMasterDBSet: [DepartmentMasterDB]
    blockDetailsMasterDBSet: [BlockDetailsMasterDB]
    employeeSchedules: [EmployeeScheduleDB]
}

input UserCredentialsInput {
    userCredentialId: Long
    username: String
    password: String!
    employeeInfo: EmployeeInfoInput
}


input EmployeeInfoInput {
    userDetailsId: Long
    fullName: String
    gender: Gender
    doctorCode: String!
    dob: LocalDate
    userSignature: String
    userImage: String
    isActive: Boolean
    provider: Provider
    prefixMasterDB: PrefixMasterInput
    userCredentialsInput: UserCredentialsInput
    organizationDBSet: [OrganizationGroupInput]
    communicationInfoDB: [CommunicationInfoInput]
    roles: [RoleInput]
    departmentMasterDBSet: [DepartmentMasterInput]
    blockDetailsMasterDBSet: [BlockDetailsMasterInput]
    employeeSchedules: [EmployeeScheduleInput]
}




