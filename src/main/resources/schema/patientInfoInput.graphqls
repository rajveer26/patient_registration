#
#type PatientDetailsDB {
#    patientId: ID!
#    patientName: String!
#    gender: Gender!
#    mrno: String!
#    dob: LocalDate!
#    patientImage: String
#    registeredOn: LocalDate
#    planName: String
#    prefixMasterDB: PrefixMasterDB
#    communicationInfoDB: [CommunicationInfoDB]
#    patientRegistrations: [PatientConsultationDB]
#    roles: [RolesDB]
#}
#
#
## Define the PatientVisitInput type
#input PatientDetailsInput {
#    patientId: Long
#    patientName: String!
#    gender: Gender!
#    mrno: String!
#    dob: LocalDate!
#    patientImage: String
#    registeredOn: LocalDate
#    planName: String
#    prefixMasterDB: PrefixMasterInput
#    communicationInfoDB: [CommunicationInfoInput]
#    patientRegistrations: [PatientConsultationInput]
#    roles: [RoleInput]
#}
#
## Define the PatientVisitInput type
#type PatientSearch {
#    patientId: Long
#    patientName: String!
#    gender: Gender!
#    mrno: String!
#    dob: LocalDate!
#    patientImage: String
#    registeredOn: LocalDate
#    planName: String
#    communicationInfoDB: [CommunicationSearch]
#}



# Define the PatientDetailsDB type
type PatientDetailsDB {
    patientId: ID!
    mrno: String!
    firstName: String!
    middleName: String
    lastName: String
    patientName: String!
    gender: Gender!
    maritalStatus: String
    dob: LocalDate
    age: Int
    patientImage: String
    registeredOn: LocalDate
    smartCardId: String
    esiIpNumber: String
    prefixMasterDB: PrefixMasterDB
    communicationInfoDB: [CommunicationInfoDB]
    patientRegistrations: [PatientConsultationDB]
    roles: [RolesDB]
}

# Define the input type PatientDetailsInput
input PatientDetailsInput {
    patientId: Long
    mrno: String!
    firstName: String!
    middleName: String
    lastName: String
    patientName: String
    gender: Gender!
    maritalStatus: String
    dob: LocalDate
    age: Int
    patientImage: String
    registeredOn: LocalDate
    smartCardId: String
    esiIpNumber: String
    prefixMasterDB: PrefixMasterInput
    communicationInfoDB: [CommunicationInfoInput]
    patientRegistrations: [PatientConsultationInput]
    roles: [RoleInput]
}

# Define a simplified PatientSearch type for search results
type PatientSearch {
    patientId: Long
    patientName: String
    gender: Gender!
    mrno: String!
    dob: LocalDate
    patientImage: String
    registeredOn: LocalDate
    communicationInfoDB: [CommunicationSearch]
}
